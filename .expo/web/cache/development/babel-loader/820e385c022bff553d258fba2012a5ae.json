{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/adrianbacherer/Desktop/WilyApp/AutoPopulateTextInput/screens/BookTransactionScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport db from \"../config.js\";\nimport * as firebase from 'firebase';\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection('Transaction').add({\n                'StudentID': _this.state.scannedStudentId,\n                'BookID': _this.state.scannedBookId,\n                'Date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': 'Issue'\n              });\n              db.collection('Books').doc(_this.state.scannedBookId).update({\n                'BookAvailability': false\n              });\n              db.collection('Students').doc(_this.state.scannedStudentId).update({\n                'NumberOfBookIssue': firebase.firestore.FieldValue.increment(1)\n              });\n              Alert.alert('BookIssue');\n\n              _this.setState({\n                scannedBookID: '',\n                scannedStudentId: ''\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection('Transaction').add({\n                'StudentID': _this.state.scannedStudentId,\n                'BookID': _this.state.scannedBookId,\n                'Date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': 'Return'\n              });\n              db.collection('Books').doc(_this.state.scannedBookId).update({\n                'BookAvailability': true\n              });\n              db.collection('Students').doc(_this.state.scannedStudentId).update({\n                'NumberOfBookIssue': firebase.firestore.FieldValue.increment(-1)\n              });\n              Alert.alert('BookReturn');\n\n              _this.setState({\n                scannedBookID: '',\n                scannedStudentId: ''\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee5() {\n      var transactionMessage, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkBookEligibility());\n\n            case 2:\n              transactionMessage = _context5.sent;\n\n              if (transactionType) {\n                _context5.next = 8;\n                break;\n              }\n\n              Alert.alert('The Book Does Not Exist In The Library');\n\n              _this.setState({\n                scannedBookId: '',\n                scannedStudentId: ''\n              });\n\n              _context5.next = 19;\n              break;\n\n            case 8:\n              if (!(transactionType === 'Issue')) {\n                _context5.next = 15;\n                break;\n              }\n\n              _context5.next = 11;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue());\n\n            case 11:\n              isStudentEligible = _context5.sent;\n\n              if (isStudentEligible) {\n                _this.initiateBookIssue;\n                Alert.alert('Book Issued To The Student');\n              }\n\n              _context5.next = 19;\n              break;\n\n            case 15:\n              _context5.next = 17;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForReturn());\n\n            case 17:\n              isStudentEligible = _context5.sent;\n\n              if (isStudentEligible) {\n                _this.initiateBookReturn;\n                Alert.alert('Book Returned To The Library');\n              }\n\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30,\n            fontWeight: 'bold',\n            textDecorationLine: 'underline'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedBookID: text\n            });\n          },\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.SubmitButton,\n          onPress: function onPress() {\n            var transactionMessage = _this2.handleTransaction();\n\n            _this2.setState({\n              scannedBookID: '',\n              scannedStudentId: ''\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginTop: 12,\n            fontSize: 20,\n            fontWeight: 'bold',\n            color: 'white',\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 12\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  SubmitButton: {\n    backgroundColor: 'red',\n    width: 150,\n    height: 50\n  }\n});","map":{"version":3,"sources":["/Users/adrianbacherer/Desktop/WilyApp/AutoPopulateTextInput/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","db","firebase","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","initiateBookIssue","collection","add","firestore","Timestamp","now","toDate","doc","update","FieldValue","increment","Alert","alert","scannedBookID","initiateBookReturn","handleTransaction","checkBookEligibility","transactionMessage","transactionType","checkStudentEligibilityForBookIssue","isStudentEligible","checkStudentEligibilityForReturn","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","fontWeight","textDecorationLine","inputView","inputBox","text","scanButton","buttonText","SubmitButton","marginTop","color","Component","create","flex","justifyContent","alignItems","displayText","backgroundColor","padding","margin","flexDirection","borderWidth","borderRightWidth","borderLeftWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Image, StyleSheet, ToastAndroid, Alert, KeyboardAvoidingView } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nimport db from '../config.js'\nimport *as firebase from 'firebase'\n\nexport default class TransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId: '',\n        scannedStudentId:'',\n        buttonState: 'normal',\n        transactionMessage:''\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n\n      if(buttonState===\"BookId\"){\n        this.setState({\n          scanned: true,\n          scannedBookId: data,\n          buttonState: 'normal'\n        });\n      }\n      else if(buttonState===\"StudentId\"){\n        this.setState({\n          scanned: true,\n          scannedStudentId: data,\n          buttonState: 'normal'\n        });\n      }\n      \n    }\n    \n    initiateBookIssue = async()=>{\n      db.collection('Transaction').add({\n        'StudentID':this.state.scannedStudentId,\n        'BookID':this.state.scannedBookId,\n        'Date':firebase.firestore.Timestamp.now().toDate(),\n        'transactionType':'Issue'\n      })\n      db.collection('Books').doc(this.state.scannedBookId).update({\n        'BookAvailability':false,\n      })\n      db.collection('Students').doc(this.state.scannedStudentId).update({\n        'NumberOfBookIssue':firebase.firestore.FieldValue.increment(1)\n      })\n      Alert.alert('BookIssue')\n      this.setState({\n        scannedBookID:'',\n        scannedStudentId:''\n      })\n    }\n    initiateBookReturn = async()=>{\n      db.collection('Transaction').add({\n        'StudentID':this.state.scannedStudentId,\n        'BookID':this.state.scannedBookId,\n        'Date':firebase.firestore.Timestamp.now().toDate(),\n        'transactionType':'Return'\n      })\n      db.collection('Books').doc(this.state.scannedBookId).update({\n        'BookAvailability':true,\n      })\n      db.collection('Students').doc(this.state.scannedStudentId).update({\n        'NumberOfBookIssue':firebase.firestore.FieldValue.increment(-1)\n      })\n      Alert.alert('BookReturn')\n      this.setState({\n        scannedBookID:'',\n        scannedStudentId:''\n      })\n    }\n\n    handleTransaction = async()=>{\n      var transactionMessage=await this.checkBookEligibility()\n       if(!transactionType){\n        Alert.alert('The Book Does Not Exist In The Library')\n        this.setState({\n          scannedBookId:'',\n          scannedStudentId:''\n        })\n       }\n        else if(transactionType==='Issue'){\n          var isStudentEligible=await this.checkStudentEligibilityForBookIssue()\n          if(isStudentEligible){\n          this.initiateBookIssue\n          Alert.alert('Book Issued To The Student')\n          }\n        }\n        else{\n          var isStudentEligible=await this.checkStudentEligibilityForReturn()\n          if(isStudentEligible){\n          this.initiateBookReturn\n          Alert.alert('Book Returned To The Library')\n          }\n        }\n      }\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n        <KeyboardAvoidingView style={styles.container} behavior='padding' enabled> \n            <View>\n              <Image\n                source={require(\"../assets/booklogo.jpg\")}\n                style={{width:200, height: 200}}/>\n              <Text style={{textAlign: 'center', fontSize: 30, fontWeight:'bold', textDecorationLine:'underline'}}>Wily</Text>\n            </View>\n\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              onChangeText={text=>this.setState({scannedBookID:text})}\n              value={this.state.scannedBookId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              onChangeText={text=>this.setState({scannedStudentId:text})}\n              value={this.state.scannedStudentId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"StudentId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n\n            </View>\n\n          <TouchableOpacity style={styles.SubmitButton}\n          onPress={()=>{\n            var transactionMessage=this.handleTransaction()\n            this.setState({\n              scannedBookID:'',\n              scannedStudentId:''\n            })\n          }}>\n\n           <Text style={{marginTop:12, fontSize:20, fontWeight:'bold', color:'white', textAlign:'center'}}>Submit</Text>\n\n          </TouchableOpacity>\n          \n        </KeyboardAvoidingView>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    },\n    SubmitButton:{\n      backgroundColor: 'red',\n      width: 150,\n      height:50,\n    }\n  });"]},"metadata":{},"sourceType":"module"}